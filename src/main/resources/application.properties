# Server Configuration
server.port=8080

# Resilience4j Circuit Breaker Configuration
resilience4j.circuitbreaker.instances.userService.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.userService.wait-duration-in-open-state=1s
resilience4j.circuitbreaker.instances.userService.permitted-number-of-calls-in-half-open-state=2
resilience4j.circuitbreaker.instances.userService.sliding-window-size=3
resilience4j.circuitbreaker.instances.userService.sliding-window-type=count_based
resilience4j.circuitbreaker.instances.userService.minimum-number-of-calls=3
resilience4j.circuitbreaker.instances.userService.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.userService.register-health-indicator=true
resilience4j.circuitbreaker.instances.userService.record-exceptions=java.lang.RuntimeException
resilience4j.circuitbreaker.instances.userService.ignore-exceptions=java.lang.IllegalArgumentException

# Resilience4j Retry Configuration
resilience4j.retry.instances.userService.enabled=false

# Resilience4j Rate Limiter Configuration
resilience4j.ratelimiter.instances.processDataService.limit-for-period=10
resilience4j.ratelimiter.instances.processDataService.limit-refresh-period=1s
resilience4j.ratelimiter.instances.processDataService.timeout-duration=0s

# Actuator Configuration
management.endpoints.web.exposure.include=health,metrics,circuitbreakers,circuitbreakerevents
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true 